---
title: "Halloween Candy"
author: "Julia Ainsworth"
format: gfm
prefer-html: true
editor: visual
---

## Quarto

In this mini-project we will examine 538 Halloween Candy data. What is your favorite candy? What is nougat anyway??

Importing the candy dataset

```{r}
candy <- read.csv("candy-data.csv", row.names = 1)
head(candy)
```

# Q1. How many different candy types are in this dataset?

```{r}
nrow(candy)
```

# Q2. How many fruity candy types are in the dataset?

```{r}
num_fruity_candies <- sum(candy$fruity)
num_fruity_candies
```

Finding out how popular the candy is:

```{r}
candy["Twix", ]$winpercent

```

# Q3. What is your favorite candy in the dataset and what is it's winpercent value?

A: Reese's pieces

```{r}
candy["ReeseÃ•s pieces", ]$winpercent
```

# Q4. What is the winpercent value for "Kit Kat"?

```{r}
candy["Kit Kat", ]$winpercent
```

# Q5. What is the winpercent value for "Tootsie Roll Snack Bars"?

```{r}
candy["Tootsie Roll Snack Bars", ]$winpercent
```

Installed the skimr package:

```{r}
#can use skimr::skim()

skimr::skim(candy)

```

# Q6. Is there any variable/column that looks to be on a different scale to the majority of the other columns in the dataset?

A: winpercent is on a different scale than the rest of the columns in the dataset

# Q7. What do you think a zero and one represent for the candy\$chocolate column?

Probably true or false for whether the candy contains chocolate or not

# Q8. Plot a histogram of winpercent values

```{r}
hist(candy$winpercent)
```

Alternately, using ggplot

```{r}
library(ggplot2)
ggplot(candy) + 
  aes(winpercent) + 
  geom_histogram(bins =10, col="black", fill="darkgreen")
```

# Q9. Is the distribution of winpercent values symmetrical?

No

# Q10. Is the center of the distribution above or below 50%?

Below

# Q11. On average is chocolate candy higher or lower ranked than fruit candy?

Higher!

```{r}
choc.inds <- as.logical(candy$chocolate)
chocolate.win <- candy[choc.inds, ]$winpercent
mean(chocolate.win)

fruit.inds <- as.logical(candy$fruity)
fruit.win <- candy[fruit.inds, ]$winpercent
mean(fruit.win)

```

# Q12. Is this difference statistically significant?

```{r}
t.test(chocolate.win, fruit.win)
```

A: looks like yes!

# 3. Overall Candy Rankings

The base R `sort()` and `order()` functions are very useful!

```{r}
x <- c(5, 2, 1, 6)
sort(x)

# versus

x[order(x)]
```

We can arrange this dataset using dplyr This one arranges them in ascending order so we can see the lowest 5

# Q13. What are the five least liked candy types in this set?

```{r}
library(dplyr)
candy %>% 
  arrange(winpercent) %>% 
  head(5)
```

# Q14. What are the top 5 all time favorite candy types out of this set?

```{r}
candy %>%
  arrange(desc(winpercent)) %>%
  head(n=5)
```

# Q15. Make a first barplot of candy ranking based on winpercent values.

Using ggplot: (note: use geom_col over geom_bar most of the time!!)

```{r}

library(ggplot2)

ggplot(candy) + 
  aes(winpercent, rownames(candy)) +
  geom_col()

```

# Q16. This is quite ugly, use the reorder() function to get the bars sorted by winpercent?

```{r}
p <- ggplot(candy) +
aes(winpercent, reorder(rownames(candy),winpercent)) +
  geom_col()
p
```

If I wanted to save this, I would use:

```{r}
#If I want to save this barplot
# ggsave("mybarplot.png")
```

To use colors for the plot, we need to set up a vector with colors

```{r}
my_cols = rep("black", nrow(candy))
my_cols[as.logical(candy$chocolate)] = "chocolate"
my_cols[as.logical(candy$bar)] = "brown"
my_cols[as.logical(candy$fruity)] = "pink"
```

```{r}
ggplot(candy) + 
  aes(winpercent, reorder(rownames(candy), winpercent)) +
  geom_col(fill = my_cols)
```

# Q17. What is the worst ranked chocolate candy?

A: Nik E Nip

# - Q18. What is the best ranked fruity candy?

A: Starburst

Now we can use ggrepel to make the text labels easier to read

```{r}
library(ggrepel)

#A plot of price vs the percentage of winning

ggplot(candy) + 
  aes(winpercent, pricepercent, label =rownames(candy)) +
  geom_point(col=my_cols) +
  geom_text_repel(col=my_cols, size = 1.4, max.overlaps = 11)
# this combination of arguments for text_repel gets us a plot with everything labeled
```

# Q19. Which candy type is the highest ranked in terms of winpercent for the least money - i.e. offers the most bang for your buck?

Reese's miniatures

# Q20. What are the top 5 most expensive candy types in the dataset and of these which is the least popular?

```{r}
ord <- order(candy$pricepercent, decreasing = T)
head( candy[ord, c(11,12)], n =5)
```

The least popular among the most expensive candy types is Nik L Nip

# Q21. Make a barplot again with geom_col() this time using pricepercent and then improve this step by step, first ordering the x-axis by value and finally making a so called "dot chat" or "lollipop" chart by swapping geom_col() for geom_point() + geom_segment().

```{r}
ggplot(candy) + 
  aes(pricepercent, reorder(rownames(candy), pricepercent)) +
  geom_segment(aes(yend  =reorder(rownames(candy), pricepercent),
                   xend=0), col="gray40") +
  geom_point()
```

```{r}
library(corrplot)
cij <- cor(candy)
corrplot(cij)

```

# Q22. Examining this plot what two variables are anti-correlated (i.e. have minus values)?

Chocolate and fruit!

# Q23. Similarly, what two variables are most positively correlated?

Winpercent and chocolate seem to be associated

Now we can use PCA to the candy dataset, remembering that we need to scale the data because winpercent is at a different scale than the rest of the data (0 to 100 instead of 0 to 1)

```{r}
pca <- prcomp(candy, scale = T)
summary(pca)
```

Now we can plot PC1 vs PC2

```{r}
plot(pca$x[,1], pca$x[,2], col=my_cols, pch = 16)
```

Now we can make a new dataframe with our PCA results and candy data to be able to plot this with ggplot

```{r}
my_data <- cbind(candy, pca$x[,1:3])
```

```{r}
p <- ggplot(my_data) +
  aes(x = PC1, y = PC2,
      size = winpercent/100,
      text=rownames(my_data),
      label = rownames(my_data)) +
  geom_point(col=my_cols)
p
```

Then we will add non-overlapping candy names, title, and a subtitle

```{r}
library(ggrepel)

p + geom_text_repel(size = 2.2, col = my_cols, max.overlaps = 7) +
  theme(legend.position = "none") +
  labs(title = "Halloween Candy PCA Space",
       subtitle = "Colored by type: chocolate bar (dark brown), chocolate other (light brown), fruity (pink), other (black)", 
       caption = "Data from 538")
```

Also trying plotly to be able to mouse over the plot: Note: this worked, but the pdf did not like it!! I have commented it out

```{r}
# library(plotly)
# ggplotly(p)
```

```{r}
par(mar=c(8,4,2,2))
barplot(pca$rotation[,1], las=2, ylab="PC1 Contribution")

```

# Q24. What original variables are picked up strongly by PC1 in the positive direction? Do these make sense to you?

Yes! It is showing us what we've seen throughout the dataset, where fruity and pluribus are very different from chocolate and bar
