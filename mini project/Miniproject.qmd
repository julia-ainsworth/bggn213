---
title: "Mini Project"
author: "Julia Ainsworth"
format: pdf
editor: visual
toc: true 
---

# Downloading data

First step is to get the data 
```{r}
#Downloaded data into working directory from class website
fna.data <- "WisconsinCancer.csv"
wisc.df <- read.csv(fna.data, row.names = 1)
head(wisc.df, n = 3)
```

Then, getting rid of the first column: 
```{r}
wisc.data <- wisc.df[,-1]
diagnosis <- wisc.df$diagnosis
as.factor(diagnosis)
```


## Q1: How many observations are in this data set? 

```{r}
nrow(wisc.data)
```

There are 569 observations in the data set. 

## Q2: How many of the observations have a malignant diagnosis? 


```{r}
table(diagnosis)
```

There are 212 malignant diagnoses 

## Q3 How many variables/features in the data are suffixed with _mean? 

```{r}
length(grep(pattern = "mean", x = as.character(variable.names(wisc.df))))
```
10 of the variables in the data are suffixed with _mean 

# Part 2: PCA Component Analysis

Checking the column means and standard deviation
```{r}
colMeans(wisc.data)
apply(wisc.data,2,sd)
```

```{r}
#Performing PCA on wisc.data; scaling here IS appropriate
wisc.pr <- prcomp(wisc.data, scale. = TRUE)
```

```{r}
#Next, summarizing results:
summary(wisc.pr)
```

## Q4: From your results, what proportion of the original variance is captured by the first principal components (PC1)? 
A:  44.27%

## Q5. How many principal components (PCs) are required to describe at least 70% of the original variance in the data?
PC1-PC3

## Q6. How many principal components (PCs) are required to describe at least 90% of the original variance in the data?
7 PCs! 

Interpreting the results of the PCA:

```{r}
biplot(wisc.pr)
```

## Q7: What stands out to you about this plot? Is it easy or difficult to understand? Why?
This plot stands out as being very difficult to interpret! I would prefer to use a different type of plot to interpret our PCA results. 

```{r}
#Scatterplot instead
as.factor(diagnosis)
plot(wisc.pr$x[,1:2], col = as.factor(diagnosis))
```
## Q8. Generate a similar plot for principal components 1 and 3. What do you notice about these plots?

There is less separation than between PC1 and PC2. 
```{r}
# PC 1 and 3
plot(x = wisc.pr$x[,1], y = wisc.pr$x[,3], col = as.factor(diagnosis), 
     xlab = "PC1", ylab = "PC3")
```
Next step is to go to ggplot to make it look better

```{r}
#Creating a data.frame
df <- as.data.frame(wisc.pr$x)
df$diagnosis <- diagnosis
library(ggplot2)
```

```{r}
#Making a plot 
ggplot(df) + 
  aes(PC1, PC2, col = as.factor(diagnosis)) +
  geom_point()
```

Now, we will look at the scree plots to see the proportion of variance

```{r}
#Calculating the variance
pr.var <- wisc.pr$sdev^2
head(pr.var)
```

```{r}
#Variance explained by each principal component (30 total): pve
pve <- pr.var/30
plot(pve, xlab = "Principal Component", 
     ylab = "Proportion of Variance Explained", 
     ylim = c(0,1), type = "o")
```

```{r}
# Alternative scree plot of the same data, note data driven y-axis
barplot(pve, ylab = "Precent of Variance Explained",
     names.arg=paste0("PC",1:length(pve)), las=2, axes = FALSE)
axis(2, at=pve, labels=round(pve,2)*100 )
```

## Q9. For the first principal component, what is the component of the loading vector (i.e. wisc.pr$rotation[,1]) for the feature concave.points_mean? This tells us how much this original feature contributes to the first PC. 
```{r}
wisc.pr$rotation[,1]
```
Q9 answer: -0.26085376 

# Part 3: Hierarchical clustering

```{r}
data.scaled <- scale(wisc.data)
```

The Euclidean distance between all pairs of observations:
```{r}
data.dist <- dist(data.scaled)
```

Hierarchical clustering model 
```{r}
wisc.hclust <- hclust(data.dist, method = "complete")
```

## Q10. Using the plot() and abline() functions, what is the height at which the clustering model has 4 clusters?

```{r}
plot(wisc.hclust)
abline(h = 19, col = "red", lty =2)
```

```{r}
wisc.hclust.clusters <- cutree(wisc.hclust, k =4)
table(wisc.hclust.clusters, diagnosis)
```

## Q12. Which method gives your favorite results for the same data.dist dataset? Explain your reasoning.

```{r}
wisc.hclust2 <- hclust(data.dist, method = "ward.D2")
plot(wisc.hclust2)
```
Answer Q12: My favorite result was also with ward.D2, as it seemed like the neatest/easiest to interpret 

Clustering on PCA results
```{r}
wisc.pr.hclust <- hclust(dist(wisc.pr$x[,1:7]), "ward.D2")
plot(wisc.pr.hclust)
```

```{r}
grps <- cutree(wisc.pr.hclust, k =2)
table(grps)
```

```{r}
table(grps, diagnosis)
```

```{r}
plot(wisc.pr$x[,1:2], col = grps)
```

```{r}
plot(wisc.pr$x[,1:2], col = as.factor(diagnosis))
```
```{r}
g <- as.factor(grps)
levels(g)
g <- relevel(g,2)
levels(g)
```
```{r}
#Now plotting with reordered factor
plot(wisc.pr$x[,1:2], col =g)
```

## skipping following step for pdf: 3D 

```{r}
#Clustering along the first 7 PCs
wisc.pr.hclust <- hclust(dist(wisc.pr$x[, 1:7]), method="ward.D2")
wisc.pr.hclust.clusters <- cutree(wisc.pr.hclust, k =2)
table(wisc.pr.hclust.clusters)
```

## Q13. How well does the newly created model with four clusters separate out the two diagnoses?
Comparing to actual diagnoses: 
```{r}
table(wisc.pr.hclust.clusters, diagnosis)
```

## Q14. How well do the hierarchical clustering models you created in previous sections (i.e. before PCA) do in terms of separating the diagnoses? Again, use the table() function to compare the output of each model (wisc.km$cluster and wisc.hclust.clusters) with the vector containing the actual diagnoses.
```{r}
table(wisc.hclust.clusters, diagnosis)
```

# Prediction
```{r}
#url <- "new_samples.csv"
url <- "https://tinyurl.com/new-samples-CSV"
new <- read.csv(url)
npc <- predict(wisc.pr, newdata=new)
npc
```
```{r}
plot(wisc.pr$x[,1:2], col=g)
points(npc[,1], npc[,2], col="blue", pch=16, cex=3)
text(npc[,1], npc[,2], c(1,2), col="white")
```
## skipping question 15, optional 

## Q16. Which of these new patients should we prioritize for follow up based on your results?

