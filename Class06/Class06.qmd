---
title: "Class 6: Writing R Functions"
author: "Julia Ainsworth"
format: gfm
editor: visual
date: 10-14-22
toc: true
---

## Input vectors

```{r}
student1 <- c(100, 100, 100, 100, 100, 100, 100, 90)
student2 <- c(100, NA, 90, 90, 90, 90, 97, 80)
student3 <- c(90, NA, NA, NA, NA, NA, NA, NA)
```

# Q1

Write a function grade() to determine an overall grade from a vector of student homework assignment scores dropping the lowest single score. If a student misses a homework (i.e. has an NA value) this can be used as a score to be potentially dropped. Your final function should be adquately explained with code comments and be able to work on an example class gradebook such as this one in CSV format: "https://tinyurl.com/gradeinput" \[3pts\]

## Notes for finishing Q1

### Getting a formula with one easy vector - student 1

```{r}
mean(student1)
#so far so easy
which.min(student1)
student1[-8]

student1[-which.min(student1)]
adjusted.student1 <- student1[-which.min(student1)]

mean(adjusted.student1)


```

### Notes from class:

-   A **name** (we determine this)
-   Input **arguments** (there can be loads, comma separated)
-   A **body** (the R code that does the work)

Student 2 - NAs are a problem

```{r}
adjusted.student2 <- student2[-which.min(student2)]
mean(adjusted.student2)
#NAs are a problem

mean(adjusted.student2, na.rm = TRUE)
```

Student 3

```{r}
adjusted.student3 <-  student3[-which.min(student3)]
adjusted.student3
mean(adjusted.student3, na.rm =TRUE) 
#many NAs are also a problem

            
```

```{r}
is.na(student2)
sum(is.na(student2))
student2[ is.na(student2) ] <- 0
student2 
adjusted.student2 <- student2[-which.min(student2)]
mean(adjusted.student2)

```

```{r}
student3[is.na(student3)] <- 0
student3
adjusted.student3 <- student3[-which.min(student3)]
mean(adjusted.student3)

# or alternately
missing_hw <- is.na(student3)
student3[ missing_hw] <- 0
student3
mean(student3[-which.min(student3)])
```

Putting all of that into a function

## Answer Q1

```{r}
# Combining 1. dropping the lowest score and 2. making NAs 0s
grade <- function(x) {
  x[ is.na(x) ] <- 0;
  mean(x[ -which.min(x) ] ) 
}
# IT W O R K S !!!!!!!
# Note: absolutely the hardest part was the parentheses. Spaces help with this
```

Testing out the function:

```{r}
grade(student1)
grade(student2)
grade(student3)
```

# Q2

Q2. Using your grade() function and the supplied gradebook, who is the top scoring student overall in the gradebook? \[3pts\]

Importing data from csv

```{r}
gradebook <- read.csv("https://tinyurl.com/gradeinput",
                      row.names = 1)
head(gradebook)

```

Now we are going to use the `apply()` function; this will more efficiently apply a function to a matrix; we will apply our function grade to the matrix gradebook

```{r}
student_results <- apply(gradebook, 1, grade)
#Note: using 1 here for the margin to get the students
which.max(student_results)

```

# Q3

```{r}
hardest_hw <- apply(gradebook, 2, sum, na.rm = TRUE)
hardest_hw
#Note: using 2 instead of 1 here returns hw numbers (columns; margin =2 )
which.min(hardest_hw)
```

# Q4

```{r}
mask <- gradebook
mask

mask[ is.na(mask) ] <- 0
mask

cor(mask$hw5, student_results)
```

Applying `cor()` function to gradebook where NAs have been replaced with 0s?

```{r}
q4 <- apply(mask, 2, cor, y = student_results)
q4
```
